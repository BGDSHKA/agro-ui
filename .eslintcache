[{"E:\\Projects\\agro-ui\\src\\index.js":"1","E:\\Projects\\agro-ui\\src\\App.js":"2","E:\\Projects\\agro-ui\\src\\reportWebVitals.js":"3","E:\\Projects\\agro-ui\\src\\App.test.js":"4","E:\\Projects\\agro-ui\\src\\components\\ExcelToJson.js":"5","E:\\Projects\\agro-ui\\src\\components\\InputForm.js":"6","E:\\Projects\\agro-ui\\src\\components\\Calculating.js":"7","E:\\Projects\\agro-ui\\src\\components\\Output.js":"8","E:\\Projects\\agro-ui\\src\\components\\Rpd.js":"9","E:\\Projects\\agro-ui\\src\\components\\Rpn.js":"10","E:\\Projects\\agro-ui\\src\\components\\Data.js":"11","E:\\Projects\\agro-ui\\src\\components\\Table.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":615,"mtime":1607850666034,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":246,"mtime":499162500000,"results":"17","hashOfConfig":"14"},{"size":2195,"mtime":1608032882566,"results":"18","hashOfConfig":"14"},{"size":8249,"mtime":1607838378005,"results":"19","hashOfConfig":"14"},{"size":1462,"mtime":1607839690815,"results":"20","hashOfConfig":"14"},{"size":536,"mtime":1607833822859,"results":"21","hashOfConfig":"14"},{"size":187,"mtime":1607807886230,"results":"22","hashOfConfig":"14"},{"size":191,"mtime":1607838076149,"results":"23","hashOfConfig":"14"},{"size":13784,"mtime":1607839088235,"results":"24","hashOfConfig":"14"},{"size":226,"mtime":1607843492054,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"23z70x",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\agro-ui\\src\\index.js",[],"E:\\Projects\\agro-ui\\src\\App.js",[],"E:\\Projects\\agro-ui\\src\\reportWebVitals.js",[],"E:\\Projects\\agro-ui\\src\\App.test.js",[],"E:\\Projects\\agro-ui\\src\\components\\ExcelToJson.js",["51"],"import React from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport Table from \"./Table\";\r\n\r\n\r\nclass ExcelToJson extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = {\r\n      file: \"\",\r\n      name: \"\",\r\n      excel: \"\",\r\n    };\r\n    \r\n  }\r\n\r\n  handleClick(e) {\r\n    this.refs.fileUploader.click();\r\n  }\r\n\r\n  filePathset(e) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    var file = e.target.files[0];\r\n    var namef = e.target.files[0].name;\r\n    this.setState({ file: file, name: namef});\r\n\r\n    console.log(this.state.file);\r\n    \r\n  }\r\n\r\n  readFile() {\r\n    var f = this.state.file;\r\n   \r\n    const reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: \"binary\" });\r\n   \r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n   \r\n      var data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n   \r\n     \r\n      this.setState({excel: this.convertToJson(data)})\r\n     \r\n    };\r\n    reader.readAsBinaryString(f);\r\n  }\r\n\r\n  convertToJson(csv) {\r\n    var lines = csv.split(\"\\n\");\r\n\r\n    var result = [];\r\n\r\n    var headers = lines[0].split(\",\");\r\n\r\n    for (var i = 1; i < lines.length-1; i++) {\r\n      var obj = {};\r\n      var currentline = lines[i].split(\",\");\r\n\r\n      for (var j = 0; j < headers.length; j++) {\r\n        obj[headers[j]] = currentline[j];\r\n      }\r\n\r\n      result.push(obj);\r\n    }\r\n  \r\n    \r\n    return JSON.stringify(result); \r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br></br>\r\n        <Form>\r\n        <Form.File \r\n          type=\"file\"\r\n\r\n          id=\"file\"\r\n          ref=\"fileUploader\"\r\n          label={this.state.name}\r\n          onChange={this.filePathset.bind(this)}\r\n          custom\r\n        />\r\n        </Form>\r\n        <Button variant=\"success\"\r\n          onClick={() => {\r\n            this.readFile();\r\n          }}\r\n        block>\r\n          Применить датасет\r\n        </Button>\r\n {this.state.excel}\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ExcelToJson;","E:\\Projects\\agro-ui\\src\\components\\InputForm.js",["52","53"],"E:\\Projects\\agro-ui\\src\\components\\Calculating.js",[],"E:\\Projects\\agro-ui\\src\\components\\Output.js",["54"],"E:\\Projects\\agro-ui\\src\\components\\Rpd.js",[],"E:\\Projects\\agro-ui\\src\\components\\Rpn.js",[],"E:\\Projects\\agro-ui\\src\\components\\Data.js",[],"E:\\Projects\\agro-ui\\src\\components\\Table.js",[],{"ruleId":"55","severity":1,"message":"56","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":13},{"ruleId":"59","severity":1,"message":"60","line":37,"column":33,"nodeType":"61","messageId":"62","endLine":37,"endColumn":34},{"ruleId":"59","severity":1,"message":"60","line":39,"column":33,"nodeType":"61","messageId":"62","endLine":39,"endColumn":34},{"ruleId":"63","severity":1,"message":"64","line":6,"column":5,"nodeType":"65","messageId":"66","endLine":17,"endColumn":2},"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]